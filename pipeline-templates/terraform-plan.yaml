jobs:
  - job: Plan_${{ parameters.environment }}
    pool:
      vmImage: ${{ parameters.agentPool }}
    steps:
      - task: InstallSSHKey@0
        displayName: 'Install SSH Key'
        inputs:
          hostName: 'github.com'
          sshPublicKey: 'not required'
          sshKeySecureFile: 'jenkins_ssh_pk'
      - task: TerraformInstaller@0
        inputs:
          terraformVersion: ${{ parameters.terraformVersion }}
      - task: TerraformCLI@0
        displayName: Init - ${{ parameters.environment }}
        inputs:
          command: 'init'
          commandOptions: '-lock=false' # don't lock on PRs / validate phase
          backendType: 'azurerm'
          backendServiceArm: '${{ parameters.service_connection }}'
          backendAzureRmResourceGroupName: '${{ parameters.storage_account_rg }}'
          backendAzureRmStorageAccountName: '${{ parameters.storage_account_name }}'
          backendAzureRmContainerName: 'mgmtstatestorecontainer${{ parameters.environment }}'
          backendAzureRmKey: 'core-infra/${{ parameters.environment }}/terraform.tfstate'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
      - task: TerraformCLI@0
        displayName: Plan - ${{ parameters.environment }}
        inputs:
          command: 'plan'
          commandOptions: '-out=${{ parameters.environment }}${{ parameters.build }}plan -var-file=$(System.DefaultWorkingDirectory)/${{ parameters.environment }}.tfvars'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          environmentServiceName: '${{ parameters.service_connection }}'
      - task: Bash@3
        displayName: "Remove local tfstate"
        inputs:
          targetType: 'inline'
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          script: |
            rm -f terraform.tfstate* && rm -rf .terraform/
      - publish: $(System.DefaultWorkingDirectory)/${{ parameters.environment }}${{ parameters.build }}plan
        artifact: ${{ parameters.environment }}${{ parameters.build }}plan
